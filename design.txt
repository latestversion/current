DESIGN DOCUMENT

Fun stuff:
ing-addendum: Bill Bugle is here, gazing at the sky.
moreinfo: A shovel is here. It glows with a faint light.
nothereinfo: a soap rests on the floor
matchname: rusty shovel
grammar: she, he
first name second name

<Restroom>
- This is a very nice restroom with toilets of gold and sinks of marble.-
* Roggadoff Bork is here
* a vicious rat is here
: a soap rests on the floor (but what if you drop it on the ground, or on lava? bc you have lavawalk...)
: a garden hose lies abandoned in a corner.


Bill Bugle is here. Bill looks depressed.
Dotty Falthorpe is here, aimlessly digging in the mud.
"I hope we get supper today..."
"I was supposed to get the beets for today's supper. But Im so afraid of the
rat. Oh the overseer will have me for this!"

Gatekeeper sleeping. Pour water on to wake. Needs to be bribed to open gate.
give potato gatekeeper.
"He yeah... a single tatoe is not the business i'm interested in yknow.
gotta get me apiece of soe bigger business yknow? wouldnt mind a sack o tatoes."

it begins to rain
the rain intensifies
it's pouring down
the sky turns slightly more gray.

the sad pig sighs
the pig says oink...
slush slush sush go your feet in the wet mud

kill rat
get shovel from bill (thx for killing the rat)
get empty keg from gatekeeper
fill keg water through
wake gatekeeper with water ("oh the faint smell of beer")
attack pig to scare it - overseer comes looking
get sack from where gatekeeper was
use shovel i field to dig tatoes
put tatoes in sack
give sack to gatekeeper
gate opens
You have run away from the orphanage!

elf guard
Oh I do declare that I love kittens
You need not say that twice!
So cute and cuddly!




Epic PORTING: Get a full game going and port to iOS. Remove most complicating matters (sense deprivation etc.).

Epic GOSMALL: Provide an empty start project with only core logics that will enable feature list below and a minimal world to build on.

GOSMALL
TODO:
- rebuild world from scratch
- only five or so rooms
- remove dark rooms
- remove checkhasvisual etc
- make platform layer setup in main.js as modular as possible
- design platform API, formalize, make pretty etc.
- look over all reporter stuff, info, vision, that sort of thing
- decide what would be best place to put files, what with folders on iOS?
- Rooms with the same name - OK? Start room should be by rid I think yeah tyvm.
  (otoh should not be hard to keep start area unique...?)
- region loading/unloading to not have 10000 events going at the same time.

Open issues:
Auto exits - good or not?
Should perhaps display portal description/name instead. Would probably be better....


Feature List:
Quests
Dialogues with choices
Items
Weapons
Zones
(Grammar)


Commands:
east
west
north
south
(open)
arm
use <invitem> <invitem|roomitem|roomcharter>
remove
get
attack
talk
look


THE KING OF GOBLIN FOREST

Available characters:
Tom Finkdorf
Esma Blargle
Goward Rotchest
Frannie Beet

he she it


Grassland
Player starts in grassland. Two rooms.
One room has carrots and a shovel +1 something. And also potatoes that heal.
The other has quest giver. QG wants two carrots. Quest completed -> opens fence to north. New exit: north

Goblin forest
Goblins run around, will fight.
One room has wise old man. ”The goblin king can only be defeated by someone wearing the ring of blah blah”
One room dark. When using lantern can find ring.
One room with super strong spider. You can die for sure here.
One room has goblin king. Defeating the goblin king leads to victory scene.

Victory scene: Long lost father emerges from cage behind goblin king. ”Frannie, I am your father!”
”But my name is Esma…”
”Dad, I love you!”
”Yep.”








When the client starts the user decides whether to

How to start a new game:
1. Load databases from /pristineworld /startstate
2. Save databases to /savedgames/savedirX

How to continue a saved game:
1. Load databases from /savedgames/savedirX

charid_charnamewithoutspaces

savedgames
   savedir1
      regions.data
      rooms.data
      characters.data


1) Start new game
2) Continue quest

1 ->

Choose your character:

1. Tom Finkdorf
   Scrawny.
2. Esma Blargle
   Misplaces things.
3. Goward Rotchest
   Can't make heads or tails of a two-tailed horse.
4. Frannie Beet
   Picky when it comes to food.
5. Ludo Bog
   Too fond of berries.
6. Greta Fogeyes
   Couldn't hit the side of a barn from within it.
7. Dick Dogwood
   Nudist.
8. Fred Fishmonger
   Liked by cats.

Random (?) weakness.
weak (-str), clumsy (drops items), dizzy (acts randomly canceled due to dizziness)
allergic to potatoes (ie some healing items), stupid (can't use some items)
dope fiend - addicted to something
clumsy - to hit reduction.
Liked by cats - cats follow them. There is a prob of falling over cats. Hahaha.


Damage

<weapon> <verb> <targetname> for <x> damage
Your puny hand tickles The mighty ox for 0 damage
Your puny hand mildly inconveniences The mighty ox for 1 damage
tickle
pat
mildly inconveniences
slightly scratches
sting
hit
slash
sends <name> sprawling
devastates
destroys
ultraslays
überkills
ULTRASLAYS
*ULTRASLAYS*
**ULTRASLAYS**
***ULTRASLAYS***

2 ->

playertemplates

1) New game -> start game with databases from newstate, and add char with template id
   as specified and mark as player.
2) Continue -> load databases from save state and find the one with player flag.


savedir
description.data -> {char:"Tom Boff",id:34,room:"Temple of Snoozing"}
regions
rooms
characters

TODOs:

- TemplateID should be set in Entity.
- TemplateID should be replaced by Type
- create should take either string or ctor and function should check for
  type and get ctor for string. hm I think, at least. Consider respawn
  logics.

- Rework Logics to inherit from Logic and take ownerid + ownid (latter from idbank)
- rework character & itemfactory to be more like commandfactory
  (this would enable adding chars & items independent of factories,
   -> easier to separate engine from specific game...)
- maybe merge type/templateid... ?

- think about how to make it all into an "engine" or framework. "include Game"
  Provide initial game state, have separate logics, commands etc.
- separate "engine" and adventure specific stuff
- separate core logic and adventure specific logic
- cant save player due to cyclic structure, json pukes
- remove repeatedbroadcast
- remove commented out stuff
- create an information struct to tell game which is starting room (on new game, etc)
- save scheduled events
- logic: ownerid, ownid
- aliases for commands, meh!

- create directory newgamestate automatically if not exist
carrot quest!
- reward..?

- calling function printout in log (check node and javascriptcore both have
  callee functionality)
- ability to set outstream in loggin framework
- create directory automatically (newgamestate etc) if missing
- validity checkers. things that check valid databases.

